#!/usr/bin/perl
#
#	Crank through a list of directory names, one per line, and make
#	an HTML table of contents.  Note that this really ought to be done
#	using the PIA, but hacking it out in PERL was quicker.
#
#	With the COMPACT environment variable set, it makes a more compact list
#	suitable for use as a sidebar or frame.   
#

$date = `date`;
$count= 0;
$compact = 0;
$target = "";

if ($ENV{COMPACT}) {
    $compact = 1;
    $target = " target='_content'";
}

print "<html><head>\n";
print "  <title>PIA Directory Index</title>\n";
print "</head><body>\n";
print "  <h1>PIA Directory Index</h1>\n" unless ($compact);
print "<!-- AUTOMATICALLY GENERATED: DO NOT EDIT! -->\n";

if ($compact) {
    print "<font size='-0'><a target='_top' href='all-dirs.html'>";
    print "no frames</a> <a target='_content' href='all-dirs.html#doc'>doc</a>";
    print "</font>";
} else {
    print "<p><a target='_top'  href='frames.html'>frames</a>";
    print "   <a  target='_top' href='all-dirs.html'>no frames</a>";
    print "   <a href='#doc'>doc</a>";
    print "</p>";
}

print " <table> \n" unless ($compact);
print " <table cellspacing=0 cellpadding=0>" if ($compact);

while (<>) {
    $count++;
    $links = "<tt>";
    $skip = 0;

    s/\n//;
    s/$\.\///;
    if (-e "$_/HEADER.html") { 
	$links .= "<a href='$_/HEADER.html'>H</a> ";
    } else {
	$links .= "&nbsp; "; 
    }
    if (-e "$_/Makefile") {
	$links .= "<a href='$_/Makefile'>M</a> ";
    } else { $links .= "&nbsp; "; }
    $links .= "</tt> ";
    if (-e "$_/about.html") {
	$links .= "<a href='$_/about.html'>about</a> ";
    }
    if (-e "$_/to-do.html") {
	$links .= "<a href='$_/to-do.html'>to-do</a> ";
    }
    if (-e "$_/done.html") {
	$links .= "<a href='$_/done.html'>done</a> ";
    }
    # if ($links ne "") { $links = "( $links)"; }

    $dir = ($_ eq ".")? "PIA" : "PIA/$_";
    $lst = "";			# optional link to listing for compact

    if ($compact) { $dir =~ s@[^/]+/@|&nbsp;&nbsp;@g; }

    if (-e "$_/home.xh" || -e "$_/index.xh" || -e "$_/_subsite.xcf" ) {
	# this directory appears to be active
	$dir .= "<font color=red>!</font>";
	if ($compact) { $lst = "&nbsp;<a href='$_/-'$target>[/]</a>"; }
    } else { 
	$dir .= "/" ;
	if ($compact && ! -e "$_/HEADER.html") { $skip = 1; }
    }

    if (! $skip) {
	print " <tr>";
	print "<td nowrap>";
	print "<font size='-2'>" if ($compact);
	print "<a href='$_/'$target>$dir</a>$lst";
	print "</font>" if ($compact);
	print "</td>";
	if (! $compact){
	    print "<td>";
	    print "<font size='-2'>" if ($compact);
	    print "<a href='$_/-'$target>[/]</a>";
	    print "</font>" if ($compact);
	    print "</td>";
	}
	print "<td> $links</td>\n" unless ($compact);
	print "</tr>\n";
    }
}

print " </table> \n <p> $count directories. </br>\n";
print " indexed: <code>$date</code></p>";

print "<a name='doc'><hr /></a>
<p> This is an automatically-generated index of all directories in the PIA.
    The <code>[/]</code> symbol is a link to the PIA
    ``listing'' file, and can be used only inside the PIA. <code>H</code>
    links to a <code>HEADER.html</code> file if there is one; 
    <code>M</code> links to a <code>Makefile</code>.  Names end in a red 
    exclamation mark if they appear to be ``active'', a plain slash otherwise.
    The \`\`<a href='frames.html'>frames</a>'' version of this index has a
    somewhat more compact index on the left side, and a larger frame
    on the right for the directory listing.  The index is generated by the
    command \`\`<tt>make&nbsp;index</tt>'' at the top level.
</p>
" unless ($compact);

print "<p><a href='sidebar.html'>sidebar</a></p>";
print "</body></html>\n";
