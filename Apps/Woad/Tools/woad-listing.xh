<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<hide>
  <set name="npath">
    <if>&SITE:notesPrefix;
	<then><subst match="^&SITE:notesPrefix;"
	             result="">&LOC:path;</subst></then>
	<else>&LOC:path;</else>
    </if></set>
  <if> <get name="npath" />
       <else><set name="npath">/</set></else>
  </if>
  <set name="nroot">
    <if>&SITE:notesPrefix;
	<then>&SITE:notesPrefix;</then>
	<else></else>
    </if></set>
  <set name="tail"><if> <logical op="and">
			  <get name="PATH_INFO"/>
			  <test not="not" exact="yes" match="\/">&npath;</test>
			</logical>
		        <then>/<get name="PATH_INFO"/></then>
		        <else><get name="PATH_INFO"/></else>
  </if></set>
  <if> <logical op="and">
	 <get name="tail" />
	 <test not="not" match="^\/"><get name="tail"/></test>
       </logical>
       <then><set name="tail">/<get name="tail"/></set></then>
  </if>

  <doc> Compute &amp;decoratedPath;, the path of the current directory
	``decorated'' with ".." links to the directories above "."
  </doc>
  <set name="decoratedPath">
	<decoratePath base="&nroot;">[HOST]&npath;/&tail;</decoratePath></set>
  <doc> Set other path-related variables.
	=== For some reason I have to use npath here, though LOC:path works in
	=== src-listing.  Strange.
  </doc>
  <set name="tpath"><mapNoteToTarget>&npath;&tail;</mapNoteToTarget></set>
  <set name="spath"><mapNoteToSource>&npath;&tail;</mapNoteToSource></set>
<!-- if page is a directory, xloc = &npath;&tail;  -->
<!-- === The test for directoryness is bogus.  negotiation will lose! -->
<!-- === should test for presence of source directory. -->
  <if> <test not="not" match="\.[a-zA-Z0-9]+$">&npath;&tail;</test>
       <then>
	 <set name="xloc">&npath;&tail;</set>
       </then>
       <else>
	 <set name="xloc">
	    <subst match="/[^/]*$" result="">&npath;&tail;</subst></set>
       </else>
  </if>
  <set name="xloc"><subst match="^//" result="/">&xloc;</subst></set>

  <!-- Ensure that form submissions don't get redirected!  -->
  <set name="formLoc">
    <if> <test match="\/$">&LOC:path;&tail;</test>
         <then>&LOC:path;&tail;</then>
         <else>&LOC:path;&tail;/</else>
    </if>
  </set>
</hide>

<title>&npath;&tail; : Woad annotations</title>
</head><body bgcolor="#99ccff">
<!-- &urlPath; dir?<test not="not" match="\.[a-zA-Z0-9]+$">&npath;&tail;</test>
    xloc=&xloc; npath="&npath;" tail="&tail;" npath;tail="&npath;&tail;"
    tpath="&tpath;" LOC:path;tail="&LOC:path;&tail;<br />
    title="&pageTitle;"<br />
-->
<table bgcolor="#99ccff" cellspacing="0" border="0" width="100%">
  <tr> <td>
	     <table><!-- the nested table shrink-wraps its contents     -->
	            <!-- so it doesn't get spread out by the width=100% -->
	       <tr><th align="left">
		      <big> &nbsp;<ss><a href="/.Woad/">WOAD</a></ss></big>
		   </th>
		   <th align=left>
		      <big> <get name="VAR:format"/> <i>URL annotations:</i>
			    &decoratedPath;
		      </big>
		   </th>
	       </tr>
	       <tr>
		 <td align="right">-&gt;&nbsp;</td>
		 <td>
		      <xf fmt="filtered" href="&LOC:path;&tail;">filtered</xf>
		      <xf fmt="complete" href="&LOC:path;&tail;?all">complete</xf>
		      <if><get name="tpath" />
		          <then>
		      	    <a href="&tpath;">&lt;server&gt;</a>
		      	    <a href="&tpath;" target="server">&lt;!&gt;</a>
		          </then>
		      </if>
		      <if><get name="spath" />
		          <then>
		      	    <a href="&spath;">[source]</a>
		          </then>
		      </if>
		      <a href="/.Woad/help.xh#views">[help]</a>
		 </td>
		</tr>
	     </table>
	</td>
    </tr>
</table>

<hide>
    <!-- Create a new note:  have to do this before listing the directory -->

    <if> <get name="FORM:create" />
	 <then>
	   <if> <status item="exists" src="&FORM:label;.ww" />
	        <else><!-- create new note -->
	    <output dst="&FORM:label;.ww"><make name="note">
		<make name="title"><get name="FORM:title" /></make>
		<make name="created">&dateString;</make>
		<make name="summary">
		    <parse><get name="FORM:summary" /></parse>
		</make>
		<make name="content">
		    <parse><get name="FORM:content" /></parse>
		</make>
</make><!-- note created using quick form -->
</output>
		</else>
	   </if>
	 </then>
    </if>

    <doc> Now set the files, noteFiles, and indexFiles variables </doc>
    <listNoteFiles>&LOC:path;&tail;</listNoteFiles>
</hide>

<!-- === at this point, include content of a HEADER.ww if there is one. -->

<if> <status item="exists" src="&xloc;/HEADER.ww" />
     <then>
	<set name="haveHeader">yes</set>
	<load-note>&xloc;/HEADER.ww</load-note>
	<hr />
	<displayNoteAsHeader />
     </then>
</if>

<index-bar name="Notes">Notes Links Images Source Listing</index-bar>

<form action="&formLoc;" method="GET"><!-- === PIA isn't passing POST again === -->
  <input type="hidden" name="path" value="&LOC:path;/&tail;" />
<table bgcolor="white" border="2">
  <!-- First list the indices -->
  <tr> <th bgcolor="#cccccc" width="150"> indices </th>
       <th bgcolor="#cccccc" colspan="2" align="left"> description / link to
       help </th> 
  </tr>
<repeat>
  <foreach entity="f">&indexFiles;</foreach>
  <let name="label"><subst match="\.[^.]*$" result="">&f;</subst></let>
  <tr> <td align="left" valign="top">
		<a href="&f;"><code>&label;</code></a>
       </td>
       <td colspan="2" valign="top">
		 <describeIndex>&f;</describeIndex>
       </td>
  </tr>
</repeat>

  <!-- Next, list the notes -->
  <tr> <th bgcolor="#cccccc" width="150"> Notes </th>
       <th bgcolor="#cccccc" colspan="2" align="left"> title / summary </th>
  </tr>
<repeat>
  <foreach entity="f">&noteFiles;</foreach>
  <let name="label"><subst match="\.[^.]*$" result="">&f;</subst></let>
  <tr> <td align="left" valign="top" bgcolor="yellow">
		<a href="&f;"><code>&label;</code></a>
       </td>
       <td colspan="2" valign="top" bgcolor="yellow">
		 <describeNote>&LOC:path;&tail;/&f;</describeNote>
       </td>
  </tr>
</repeat>
	
  <!-- Finally, the form for creating a new note (the easy way) -->
  <tr> <th bgcolor="#cccccc" width="150"> new note </th>
       <th bgcolor="#cccccc" colspan="2" align="left">
    	    Enter note text or use &nbsp;&nbsp;&nbsp;
    	    <a href="/.Woad/Tools/new-note?path=&xloc;">[advanced form]</a> 
       </th>
  </tr>
  <tr> <td valign="top">
    	  <select name="label"> 
	       	   <option selected="selected"><uniquify>note</uniquify></option>
	       	   <option><uniquify>bug</uniquify></option>
	       	   <option><uniquify>wish</uniquify></option>
	       	   <option><uniquify>see-also</uniquify></option>
	       	   <option>&date;-&hour;&minute;</option>
	       	   <option>&date;</option>
	       	   <if>&haveHeader;<else><option>HEADER</option></else></if>
	  </select><br />
 	  <input name="create" value="Create Note" type="submit" />
       </td>
       <td valign="top" colspan="2">
	  <textarea name="summary" cols="60" rows="4"> </textarea>
       </td>
  </tr>
</table>
</form>

<!-- ==================================================================== -->

<tool-bar />

<!-- ==================================================================== -->
<doc> Here we load the page <em>from the target server</em> and attempt to
      extract information from it.  EVIL!  Long pages will run out of memory.
</doc>

<hide>
<define element="sort-unique">
  <doc> Sort the contents and eliminate duplicates </doc>
  <action>
    <let name="prev"></let>
    <repeat><foreach><text op="sort">&content;</text></foreach>
	<if><test exact match="&prev;">&li;</test>
	    <else><let name="prev">&li;</let>&li;</else>
	</if>
    </repeat>
  </action>
</define>
  <set name="serverPage">
    <if>&SITE:notesPrefix;
	<then><include src="&PIA:url;&tpath;" tagset="/.Woad/src-html"
	       quoted="yes"/>
	</then>
	<else><include src="&tpath;" tagset="/.Woad/src-html" quoted="yes"/>
	</else>
    </if>
  </set>
  <set name="pageTitle">
    <extract><from>&serverPage;</from>
	     <name all="all">title</name>
	     <content />
    </extract>
  </set>
  <set name="linksInPage">
    <sort-unique>
      <repeat>
	<foreach>
	  <extract><from>&serverPage;</from>
			      <name all>a</name>
			      <attr>href</attr> 
			      <eval />
	  </extract>
	</foreach>
	<subst match="[#?&].*$" result="">&li;</subst>
      </repeat>
    </sort-unique>
  </set>
  <set name="linksToPage">
    <sort-unique><extract>
	<from><include quoted src="&LOC:path;&tail;/linksTo.wi"> </include>
	</from>
	<name all="all">Page</name>
	<content />
    </extract></sort-unique>
  </set>
  <!-- rewrite linksTo after sorting; -->
  <!-- === will change somewhat when we put titles in the Page nodes -->
  <if> <get name="linksToPage" />
       <then><output dst="&LOC:path;&tail;/linksTo.wi"><repeat><hide>
	     </hide><foreach>&linksToPage;</foreach>  <Page>&li;</Page>
</repeat></output>
       </then>
  </if>
  <if> &pageTitle;
       <then><output dst="&LOC:path;&tail;/pageTitle.wi">&pageTitle;
	     </output>
       </then>
  </if>
</hide>

<index-bar name="Links">Notes Links Images Source Listing</index-bar>

<blockquote>
<table bgcolor="white" cellpadding=1>
  <tr>
    <th bgcolor="#cccccc">links TO this page</th>
    <th bgcolor="#cccccc"> page title </th>
  </tr>
  <repeat>
    <foreach>&linksToPage;</foreach>
      <let name="absPath">
  	<fixRelativePath path="&xloc;">&li;</fixRelativePath></let>
      <if> &absPath;
  	   <then>
  	      <let name="absLink"><get name="SITE:notesPrefix" />&absPath;</let>
  	      <let name="title">
		   	<include src="&absLink;/pageTitle.wi"> </include>
	      </let>
	      <tr>
		 <td> <a href="&absLink;">&absPath;</a> </td>
		 <td> &nbsp;
			 <get name="title" />
		 </td>   
	      </tr>
	   </then>
     </if>	      
  </repeat>
  <tr> <td bgcolor="#99ccff" colspan="2">&nbsp;</td>	    
  <tr>
    <th bgcolor="#cccccc">links IN this page</th>
    <th bgcolor="#cccccc"> page title </th>
  </tr>
  <repeat><foreach>&linksInPage;</foreach>
    <tr><!-- may need to remap absolute links to annotation loc's -->
	   <let name="absPath">
	     <fixRelativePath path="&xloc;">&li;</fixRelativePath></let>
    <if> <get name="absPath" />
         <then>
      	    <let name="absPath">
      		<subst match="\#.*$" result="">&absPath;</subst></let>
            <let name="absLink"><get name="SITE:notesPrefix" />&absPath;</let>
            <let name="title">
      		<include src="&absLink;/pageTitle.wi">
      		      <em> (<a href="&absLink;">&absPath;</a> not yet
			   visited)</em> 
	        </include> 
      	    </let>
	    <!-- === should put title in Page node to save a lookup === -->
  	    <output append="append" dst="&absLink;/linksTo.wi"><Page>&npath;&tail;</Page>
</output>
        </then>
        <else>
            <let name="title"><em>(off site -- not indexed)</em></let>
        </else>
      </if>
      <td> <a href="&absLink;">&li;</a> </td>
      <td> &nbsp; <get name="title" />
<!-- for descriptions, need full path in any case. -->
      </td>   
    </tr>
  </repeat>
</table>
</blockquote>

<index-bar name="Images">Notes Links Images Source Listing</index-bar>

<blockquote>
<table bgcolor="white">
  <repeat><foreach>
	    <sort-unique>
	      <extract><from>&serverPage;</from>
    			      <name all>img</name>
  			      <attr>src</attr> 
  			      <eval />
    	      </extract>
	    </sort-unique>
  	  </foreach>
            <tr><!-- need to map these to server loc's:
	      	     annotation mangles images severely. -->
	      <td> <a href="&li;">&li;</a> </td>
	    </tr>
    </repeat>
</table>
</blockquote>

<index-bar name="Source">Notes Links Images Source Listing</index-bar>
<p>
<table bgcolor="white" width="90%" cellpadding="5" align="center">
  <tr>
    <td valign="top"> 
	 <a href="&spath;">View&nbsp;document&nbsp;[source]</a>
    </td>
    <td> <code>&spath;</code> </td>
  </tr>
  <tr>
    <td bgcolor="#99ccff">
    </td>
    <td> This will show you the source document or directory that corresponds
	 to this URL.  Usually this will be the document that this page comes
	 from, but in some cases <ss>WOAD</ss> may not be able to correctly map
	 the URL onto a document.
    </td>
  </tr>
</table>	  
</p>

<index-bar name="Listing">Notes Links Images Source Listing</index-bar>

<!-- For images, should simply insert the image here (DUH!) -->

<blockquote>
<p> This is a <ss>WOAD</ss> listing of <code>&tpath;</code>
    as it came from the server.  Links are ``live'' and will take you to the
    appropriate <em>server annotation</em> page. 
</p>

<table bgcolor="white" width="90%" cellpadding="5">
  <tr>
    <td valign="top"> 
	 <a href="&spath;">View&nbsp;document&nbsp;[source]</a>
    </td>
    <td> <code>&spath;</code> </td>
  </tr>
  <tr>
    <td bgcolor="#99ccff">
    </td>
    <td> This will show you the source document or directory that corresponds
	 to this URL.  Usually this will be the document that this page
	 <em>comes from</em>.
    </td>
  </tr>
  <tr>
    <td valign="top"> 
	 <a href="&tpath;">View&nbsp;page&nbsp;on&nbsp;&lt;server&gt;</a>
    </td>
    <td> <code>&tpath;</code> </td>
  </tr>
  <tr>
    <td align="right">
	 <a href="&tpath;"
    	    target="server">...&nbsp;in&nbsp;&lt;!new&nbsp;window&gt;</a>
    </td>
    <td> This will show you the document directly on the server.
    </td>
  </tr>
</table>	  
</blockquote>

<if>&SITE:notesPrefix;
    <then><yellow-note> <red> Note that at the moment, links starting with
		    ``<code>/</code>'' in the source view will be broken
		    Sorry about that.  </red>
          </yellow-note>	  
    </then>
</if>
<table bgcolor="white" cellpadding="5">
  <tr><td>
<pre><expand><extract>
               <from>&serverPage;</from>
               -document- <content/>
</extract></expand></pre> </td>
  </tr>
</table>

<short-footer cvs-id="$Id: woad-listing.xh,v 1.15 2000-07-19 00:44:53 steve Exp $" />
</body></html>
