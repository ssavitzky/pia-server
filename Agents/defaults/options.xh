<make type=DOCTYPE>html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"</make>
<html><head>
<title>Generic Options Page for &agentName;</title>
</head><body bgcolor='#ffffff' link='#c40026' vlink='#e40026'>
<header>&agentName; agent options</header>

<!-- Processing for locks has to be done here because it suppresses -->
<!-- some of the forms below.  lockExit, in particular.             -->
<if><get name="FORM:locks" />
    <then>
	  <agentLock name="doNotRemove" />
	  <agentLock name="doNotSave" />
    </then>
</if>
<!-- Similarly, these affect the appearance of some of the forms below. -->
<if>&FORM:formatting;
    <then>
	<agentOption name="verboseForms" />
	<agentOption name="verbosePages" />
    </then>
</if>

<set name=agentHome><if>&AGENT:home-dir;
			<then>/&AGENT:home-dir;/</then>
			<else>/PIA/Agents&AGENT:pathName;</else>
		    </if></set>

<sub-head page='options'>
    <tr><th> </th>
        <td><if><status src='initialize.xh' item='exists' />
                <then><a href='initialize'>[re-initialize]</a></then></if>
        </td>
    </tr>
    <tr><th> </th>
        <td><a href='&agentHome;/'>Agent documents</a>
	        <a href='/~/Agents&AGENT:pathName;/'>(Customized)</a></td>
    </tr>
  
  <if>&AGENT:criteria;<then>
    <tr><th align='right'> criteria:&nbsp;</th>
        <td>&AGENT:criteria;</td></tr></then>
  </if>
  <if>&AGENT:doNotRemove;<then></then><else>
    <tr><th align='right'></th>
        <td><form action='/Admin/remove-agent' method='POST'>
	      <table><tr><td bgcolor=silver>
              <input name='agent' value='&agentName;' type='hidden' />
              <input type='submit' value='Remove &agentName; Agent' />
	      </td></tr></table>
            </form>
  </td></tr></else></if>
  <if>&subs;<then>
    <tr><th align='right'>
           <if><test not='not' exact='exact' match='&agentType;'>&agentName;</test>
	        <then><a href='&agentType;/home'>&agentType;/</a></then>
                <else>&agentPath;/</else></if>
        </th><td><repeat list='&subs;'>
               <a href='/&li;'>&li;</a> <a href='/&li;/'><b> / </b></a>
           </repeat></td></tr></then>
  </if>
</sub-head>

<hr />
<nav-bar />
<hr />
 <a href="#options">Options</a>: (
    <a href="#formatting">Formatting</a> ||
    <a href="#locks">Locks</a> ||
    <a href="#attrs">Attributes</a> ||
    <a href="#hooks">Hooks</a> ||
    <a href="#others">Others</a> ) |||
  <a href="#xml-data">XML Data</a> |||
  <a href="#urls">URL's</a>
<hr />

<h2><a name="options">&AGENT:name; Agent Options</a></h2>
<blockquote>
  Forms: (
    <a href="#formatting">formatting</a> ||
    <a href="#locks">locks</a> ||
    <a href="#attrs">attributes</a> ||
    <a href="#hooks">hooks</a> ||
    <a href="#others">others</a> )
    <if>&AGENT:doNotSave;<then>[locked]</then> </if>
</blockquote>

<form action="options" method="POST">
  <if>&FORM:save;
      <then>
	  <agentOption name="onStart" />
	  <agentOption name="saveFile" />
      </then>
  </if>
  <if>&AGENT:saveFile;
      <then><set name="saveFile">&AGENT:saveFile;</set>
      <else>
        <if>&AGENT:user-dir;
	    <then><set name="saveFile">&AGENT:user-dir;/AGENT.xml</set></then>
	    <else><set
	    	    name="saveFile">.&AGENT:pathName;/AGENT.xml</set></else>
	</if>	
      </else>
  </if>
<if>&AGENT:doNotSave;
    <else>
      <table width="90%"  cellspacing="0" border="0" align="center">
        <tr><th bgcolor="silver" width="10%">
		<input type='submit' name="save" value="Save" /> </th>
	    <td bgcolor="silver" width="90%">&AGENT:name; Agent Options</td>
	    <td bgcolor="silver">&nbsp;&nbsp;</td>
        <tr><th bgcolor="silver">&nbsp;</th>
	    <td><b>File:</b> <input name="saveFile" value="&saveFile;" size=40/>
                <if>&FORM:save;
	            <then><if>&FORM:doNotOverwrite;
			      <then><set name="AGENT:doNotSave">locked</set>
			      </then>
			  </if>
	                  <output dst="&saveFile;">
<make type=DOCTYPE>AGENT SYSTEM "Admin-agent"</make>
&AGENT;
</output><!-- newline is required after AGENT element. -->
		      <br /><status src="&saveFile;" item=path />&nbsp;WRITTEN
		      <submit-forms><!-- register the saved agent -->
			<form method="POST" action="/Admin/load-agent.xh">
			  <input name="a-path" value="&AGENT:pathName;">
			  <input name="dst" value="&saveFile;">
			  <input name="on-start" value="&AGENT:onStart;">
			</form>
		      </submit-forms>
	            </then>
	        </if>
	    <td bgcolor="silver">&nbsp;&nbsp;</td>
	<if>&AGENT:saveFile;
	    <else>
	      <tr><td bgcolor="silver">&nbsp;</td>
		  <td valign="top">
		     <b> Note:</b> <code>saveFile</code> option not set. 
			Data will be saved in <code>user-dir</code>.
			<verboseForm><if>&AGENT:user-dir;<else>
			(computed from <code>pathName</code>)
			</else></if></verboseForm>.
		  </td>
		  <td bgcolor="silver">&nbsp;</td>
	      </tr>
	    </else>
	</if>
	<tr><td bgcolor="silver">&nbsp;</td>
	    <td valign="top">
		<checkbox value="&AGENT:onStart;" name="onStart" />
		<b>onStart</b>: 
		      load this agent when the PIA starts. <br />
	    </td>
	    <td bgcolor="silver">&nbsp;</td>
	</tr>
	<tr><td bgcolor="silver">&nbsp;</td>
	    <td valign="top">
		<checkbox value="&FORM:doNotOverwrite;" name="doNotOverwrite" />
		<b>doNotOverwrite</b>: 
		      Do not allow this save file to be overwritten. <br />
	    </td>
	    <td bgcolor="silver">&nbsp;</td>
	</tr>
	<tr><td bgcolor="silver">&nbsp;</td>
	    <td valign="top">
		You may need to use <code><a
		href="/Admin/control">/Admin/control</a></code> to save the
		agent list.
	    </td>
	    <td bgcolor="silver">&nbsp;</td>
	</tr>
        <tr><td bgcolor="silver" colspan="3">&nbsp;</td></tr>
      </table>
    </else>
</if>
</form>

<p> The forms below allow you to change various options of the &AGENT:name;
    Agent.  <if>&AGENT:doNotSave;<else>The button above, labeled ``<b>Save
    &agentName; options</b>,'' allows you to make those options permanent by
    writing an XML data file.  Note that submitting the ``<b>save</b>'' form
    will lose any unsubmitted changes you may have made on this
    page.</else></if>
</p>

<h3><a name="formatting">Formatting options</a></h3>

<form action="options#formatting" method='POST'>
  <table cellspacing="0" border="0" width="90%" align="center">
    <tr><th bgcolor="silver" width="10%">
	    <input type='submit' name="formatting" value="  Set  " /> </th>
	<th bgcolor="silver" align="left" width="90%"> Formatting Options </th>
	<td bgcolor="silver">&nbsp;&nbsp;</td>
    </tr>
    <tr><td bgcolor="silver">&nbsp;</td>
	<td valign="top">
	    <checkbox value="&AGENT:verboseForms;" name="verboseForms" />
	    <b>verboseForms</b>: 
		  Include more information in forms. <br />
	</td>
	<td bgcolor="silver">&nbsp;</td>
    </tr>
    <verboseForm>
       <tr><td bgcolor="silver">&nbsp;</td>
	   <td> For example, this line is only included if verboseForms is
		set.
	   </td>
	   <td bgcolor="silver">&nbsp;</td></tr>
    </verboseForm>
    <tr><td bgcolor="silver">&nbsp;</td>
	<td valign="top">
	    <checkbox value="&AGENT:verbosePages;" name="verbosePages" />
	    <b>verbosePages</b>: 
		  Include more information on the agent's pages. <br />
	</td>
	<td bgcolor="silver">&nbsp;</td>
    </tr>
    <verboseForm>
       <tr><td bgcolor="silver">&nbsp;</td>
	   <td> Setting <code>verbosePages</code> makes PIA-based applications
		somewhat harder to use (because the pages are bigger and have
		to be scrolled around in), but easier to learn.
	   </td>
	   <td bgcolor="silver">&nbsp;</td></tr>
    </verboseForm>
    <tr><td bgcolor="silver" colspan="3">&nbsp;</td></tr>
  </table>
</form>

<verbosePage>
  <p> You can use the <code>&lt;verbosePage&gt;</code> and
      <code>&lt;verboseForm&gt;</code> elements to enclose text to be expanded
      only when the corresponding (<code>&amp;verbosePages;</code> or
      <code>&amp;verboseForms;</code>, respectively) attribute is set.
  </p>
</verbosePage>

<h3><a name="locks">Locks</a></h3>

<p> Lock options are ``sticky'' -- they cannot be reset without shutting down
    and restarting the PIA.  These are used for locking out certain dangerous
    actions and changes, and are especially useful for PIA servers on public
    sites.
</p>

<form action="options#locks" method='POST'>
<table cellspacing="0" border="0" width="90%" align="center">
  <tr><th bgcolor="silver" width="10%">
          <input type='submit' name="locks" value="*** Set" /> </th>
      <th bgcolor="silver" align="left" width="90%"> Locks *** </th>
      <td bgcolor="silver">&nbsp;&nbsp;</td>
  </tr>
  <tr><td bgcolor="silver">&nbsp;</td>
      <td>
	  <if>&AGENT:doNotRemove;
	      <then><input type="checkbox" name="doNotRemove" checked/></then>
	      <else><input type="checkbox" name="doNotRemove"></else>
	  </if> <b>doNotRemove</b>: 
		prevent this agent from being un-installed. <br />
	  <if>&AGENT:doNotSave;
	      <then><input type="checkbox" name="doNotSave" checked/></then>
	      <else><input type="checkbox" name="doNotSave"></else>
	  </if> <b>doNotSave</b>: 
		prevent this agent's saved state from being overwritten. <br />
      </td>
      <td bgcolor="silver">&nbsp;</td>
  </tr>
  <tr><td bgcolor="silver" colspan="3">&nbsp;</td></tr>
</table>
</form>

<verbosePage>
  <p> If you set one of these locks and then save the &AGENT:name; agent's
      state, the lock will be set automatically every time the PIA is
      started up.  The lock can be removed by editing or removing the
      <code>AGENT.xml</code> file in the agent's user directory.
  </p>
  <p> Setting the <b>doNotSave</b> lock will prevent an agent's saved state
      (<code>AGENT.xml</code> file) from being overwritten.  The way to
      set this permanently is with the <b>doNotOverwrite</b> checkbox in the
      <b>Save</b> form, because if you set it in <em>this</em> form you will
      not be able to save the agent.
  </p>
</verbosePage>

<h3><a name="attrs">Attributes</a></h3>

<define element=attributeOption>
  <doc> Return true if the content is the name of an option which is stored as
        an <em>attribute</em> of an Agent.
  </doc>
  <action><logical op="or">
	    <test exact="exact" match="user-dir">&content;</test>
	    <test exact="exact" match="home-dir">&content;</test>
	    <test exact="exact" match="data-dir">&content;</test>
	    <test exact="exact" match="class">&content;</test>
	    <test exact="exact" match="type">&content;</test>
	    <test exact="exact" match="authentication">&content;</test>
  </logical></action>
</define>

<p> These are options that define ``attributes''.  Class will only take effect
    when the agent is loaded.  Changing any of these on an agent that already
    works will probably make it stop working; they should be used with caution.
</p>

<form action="options#attrs" method='POST'>
<table cellspacing="0" border="0" width="90%" align="center">
  <tr><th bgcolor="silver" width="10%">
          <input type='submit' name="attrs" value=" Set " /> </th>
      <th bgcolor="silver" align="left" width="90%"> Agent Attributes </th>
      <td bgcolor="silver">&nbsp;&nbsp;</td>
  </tr>
  <repeat><foreach>type class authentication home-dir user-dir data-dir</foreach>
    <if><attributeOption>&li;</attributeOption>
	<then>
	  <if>&FORM:attrs;<then><agentOption name="&li;" /></then></if>
	  <set name="v"><get name="AGENT:&li;"/></set>
	  <tr><td align="right" bgcolor="silver">&li;&nbsp;</td>
	      <td><input name="&li;" value="&v;" size="50" /></td>
	      <td bgcolor="silver">&nbsp;</td>
	  </tr>
	</then>
    </if>
  </repeat>
  <tr><td bgcolor="silver" colspan="3">&nbsp;</td></tr>
</table>
</form>


<h3><a name="hooks">Hooks</a></h3>

<p> Hooks are pieces of XHTML code that are expanded when certain conditions
    are met.
</p>

<if>&FORM:hooks;
    <then>
	<agentOption name="criteria" />
	<agentOption name="act-on" />
    </then>
</if>
<form action="options#hooks" method='POST'>
<table cellspacing="0" border="0" width="90%" align="center">
  <tr><th bgcolor="silver" width="10%">
          <input type='submit' name="hooks" value=" Set " /> </th>
      <th bgcolor="silver" align="left" width="90%"> Hooks </th>
      <td bgcolor="silver">&nbsp;&nbsp;</td>
  </tr>
  <tr><td align="right" valign="top" bgcolor="silver">criteria</td>
      <td> &nbsp;<input name="criteria" size="50" value="&AGENT:criteria;"  />
      </td>
      <td bgcolor="silver">&nbsp;</td>
  </tr>
  <tr><td align="right" valign="top" bgcolor="silver">act-on</td>
      <set name="rows"><if>&AGENT:act-on;<then>20</then><else>5</else></if></set>
      <td> &nbsp;<textarea name="act-on" rows="&rows;" cols=50
	         ><get name="AGENT:act-on"/></textarea>
      </td>
      <td bgcolor="silver">&nbsp;</td>
  </tr>
  <tr><td bgcolor="silver" colspan="3">&nbsp;</td></tr>
</table>
</form>



<h3><a name="others">Others</a></h3>

<define element=standardOption>
  <doc>Return true if the content is the name of a standard option; i.e., one
       which is defined in one of the forms above.
  </doc>
  <action><logical op="or">
	    <test exact="exact" match="doNotRemove">&content;</test>
	    <test exact="exact" match="doNotSave">&content;</test>
	    <test exact="exact" match="verboseForms">&content;</test>
	    <test exact="exact" match="verbosePages">&content;</test>
	    <test exact="exact" match="onStart">&content;</test>
	    <test exact="exact" match="saveFile">&content;</test>
	    <test exact="exact" match="act-on">&content;</test>
	    <test exact="exact" match="handle">&content;</test>
	    <test exact="exact" match="criteria">&content;</test>
	    <test exact="exact" match="name">&content;</test>
	    <test exact="exact" match="type">&content;</test>
	    <test exact="exact" match="path">&content;</test>
	    <test exact="exact" match="pathName">&content;</test>
	    <test exact="exact" match="user-dir">&content;</test>
	    <test exact="exact" match="home-dir">&content;</test>
	    <test exact="exact" match="data-dir">&content;</test>
	    <test exact="exact" match="class">&content;</test>
	    <test exact="exact" match="authentication">&content;</test>
  </logical></action>
</define>

<p> These are options unique to this agent. 
</p>


<form action="options#others" method='POST'>
<table cellspacing="0" border="0" width="90%" align="center">
  <tr><th bgcolor="silver" width="10%">
          <input type='submit' name="others" value=" Set " /> </th>
      <th bgcolor="silver" align="left" width="90%"> Other Options </th>
      <td bgcolor="silver">&nbsp;&nbsp;</td>
  </tr>
  <repeat><foreach>&AGENT:;</foreach>
    <if><standardOption>&li;</standardOption>
	<else>
	  <if>&FORM:others;<then><agentOption name="&li;" /></then></if>
	  <set name="v"><get name="AGENT:&li;"/></set>
	  <tr><td align="right" valign="top" bgcolor="silver">&li;&nbsp;</td>
	      <td><if><test not markup>&v;</test>
		      <then><input name="&li;" value="&v;" size=40 /></then>
		      <else><textarea name="&li;" rows=5 cols="50">&v;</textarea>
		      </else>
		  </if>
	      </td>
	      <td bgcolor="silver">&nbsp;</td>
	  </tr>
	</else>
    </if>
  </repeat>
  <tr><td bgcolor="silver" colspan="3">&nbsp;</td></tr>
</table>
</form>


<h2><a name="xml-data">Agent XML Data</a></h2>

<p> This is a ``dump'' of all of this Agent's data in XML format.  It can be
    put in a file, edited, and ``<a href="/Admin/load-agent">loaded</a>'' to
    create a new agent. 
</p>

<pre><font size="-1"><protect result markup> &AGENT;</protect></font></pre>
<hr />
<set entity='entity' name='title'>Options Page</set>

<if><test exact='exact' match='&amp;agentType'>&agentName;</test>
    <then><set name='agentPath'>&agentName;</set></then>
    <else><set name='agentPath'>&agentType;/&agentName;</set></else>
</if>

<h2><a name="urls">URL's for this Agent</a></h2>

<p>
These links locate the directories typically associated with an agent.  The home
directory is considered to be the main agent directory; however a user
directory may have been created to make modifications to the the main agent.
In this case, it is the modified version that will be loaded at system
start-up.  The data directory is the default location for writing any
data files that are output from the agent.
</p>

<table width='90%' align='center' cols='2' cellspacing='10'>
<tr><th align='left'>Link</th><th align='left'>Destination</th></tr>
<tr><td><a href='/&AGENT:name;~'>/&AGENT:name;~</a></td>
<td>Agent home directory:  </td>
</tr>
<tr><td> <a href='/&AGENT:name;/~/'>/&AGENT:name;/~/</a></td>
<td>Agent data directory.  This will be empty if no
data directory has been created for &AGENT:name;.</td>
</tr>
<tr><td><a href='~'>~</a></td>
<td>Agent user directory.  This will be empty if no
user directory has been created for &AGENT:name;.</td>
</tr>
</table>

<if><get name='AGENT:doNotRemove' /><then>
<hr />
<dl>
  <dt> Note:
  </dt><dd> This page does not have an option for removing the
       <a href='home'>&agentName;</a> agent.  It is required for the proper
       functioning of this application.
</dd></dl>
</then></if>


<footer cvsid='$Id: options.xh,v 1.2 1999-11-23 18:41:44 steve Exp $' />
</body></html>
