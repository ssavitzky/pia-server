<!DOCTYPE  html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<html><head>
<title>Text Handler Demo</title>
</head>
<body bgcolor='#ffffff' link='#c40026' vlink='#e40026'>
<header>Text Handler Demo</header>

<h2>Text Handler Demo</h2>

The text handler provides a number of ways to transform the textual content of document elements.
The <a name='text_demo'>text handler demo</a> shows how to use the following text
handler attributes:  <a href='#sort'>sort</a>, <a href='#split'>split </a>, <a href='#join'>join</a>,
<a href='#pad'>pad</a>, <a href='#trim'>trim</a>,
<a href='#eurl'>url encode</a>, <a href='#durl'>url decode</a>, <a href='b64enc'>base64 encode</a>, 
<a href='#b64dec'>base64 decode</a>, <a href='#entenc'>entity encode</a>, and
<a href='#decent'>entity decode</a>.
<p>

<hr />
</p><h3><a name='sort'>Sort a List of Names</a></h3>
<b> Description:</b> sorts the list, Tea Cocoa Coffee Espresso Mocha into alphabetical order.
Markup is preserved.
<p>
<b> Input:  </b>&lt;ul&gt;&lt;text sort&gt;&lt;li&gt;Tea&lt;li&gt;Cocoa&lt;li&gt;Coffee&lt;li&gt;Espresso&lt;li&gt;Mocha&lt;/text&gt;&lt;/ul&gt;
</p><p>
<b> Result: </b><ul><text sort='sort'><li>Tea</li><li>Cocoa</li><li>Coffee</li><li>Espresso</li><li>Mocha</li></text></ul>
</p><p>
<hr />

</p><h3> Case Sensitive Sort of a List of Names </h3>
<b> Description:</b> preserves case sensitivity, while sorting the list: lion tiger Zebra elephant Gorilla in alphabetical order.
<p>
<b> Input: </b> &lt;ol&gt;&lt;text sort case&gt;&lt;li&gt;lion&lt;li&gt;tiger&lt;li&gt;Zebra&lt;li&gt;elephant&lt;li&gt;Gorilla&lt;/text&gt;&lt;/ol&gt;
</p><p>
<b>Result: </b><ol><text sort='sort' case='case'><li>lion</li><li>tiger</li><li>Zebra</li><li>elephant</li><li>Gorilla</li></text></ol>
<hr />

</p><h3> Reverse Sort a List of Names </h3>
<b> Description:</b> sorts the list: gummi bears, jelly beans, chocolate, peanut brittle, in reverse alphabetical order.
<p>
<b>Input: </b> &lt;ul&gt;&lt;text sort reverse&gt;&lt;li&gt;gummi bears&lt;li&gt;jelly beans&lt;li&gt;chocolate&lt;li&gt;peanut brittle&lt;/text&gt;&lt;/ul&gt;
</p><p>
<b>Result: </b><ul><text sort='sort' reverse='reverse'><li>gummi bears</li><li>jelly beans</li><li>chocolate</li><li>peanut brittle</li></text></ul>
<hr />

</p><h3><a name='split'>Split Text and Marked Up Nodes</a></h3>
<b> Description:</b> splits a list of words on whitespace, and also extracts any words that are within html markup.
<p>
<b>Input: </b>&lt;text split extract&gt;very very very &lt;em&gt;very&lt;/em&gt; good&lt;/text&gt;
</p><p>
<b>Result: </b><text split='split' extract='extract'>very very very <em>very</em> good</text>
</p><p>
<hr />

</p><h3><a name='join'>Join Path Elements with "/" as Separator</a></h3>
<b> Description:</b> splits a list of words on whitespace and adds a "/" separator between each word.
<p>
<b>Input: </b> &lt;text join sep="/"&gt;/home pgage pia src java&lt;/text&gt;
</p><p>
<b>Result: </b> <text join='join' sep='/'>/home pgage pia src java</text>
</p><p>
<hr />

</p><h3><a name='pad'>Pad and Align Right</a></h3>
<b>Description: </b>Pad text on the left hand side so that it is right justified.
<p>
<b>Input: </b>&lt;text pad align left width=20&gt;cat&lt;/text&gt;
</p><p>
<b>Result: </b><text pad='pad' align='align' left='left' width='20'>cat</text>
</p><p>
<hr />

</p><h3><a name='trim'>Trim Spaces from Right and Left</a></h3>
<b>Description: </b>Trim spaces from the right and left sides of a text string.
<p>
<b>Input: </b>&lt;text trim&gt;            &lt;em&gt;     rat    &lt;/em&gt;    &lt;/text&gt;
</p><p>
<b>Result: </b><text trim='trim'>            <em>     rat    </em>    </text><br />
</p><p>
<hr />

</p><h3><a name='eurl'>Encode URL Special Symbols</a></h3>
<b>Description: </b> Encode special symbols used in URLs, such as "/" and ":" using URL encoding.
<p>
<b>Input: </b> <text decode='decode' url='url'>http://one;two?three:four@five&amp;six=seven+eight</text>
</p><p>
<b>Result: </b> <text encode='encode' url='url'>http://one;two?three:four@five&amp;six=seven+eight</text>
</p><p>
<hr />

</p><h3><a name='durl'>Decode URL Special Symbols</a></h3>
<b>Input: </b><text encode='encode' url='url'>http://www.dejanews.com/[ST_chan=art]/dnquery.xp?QRY=Faulkner&amp;VW=arts.hum.lit.authors.d_e_f&amp;noreg=1&amp;maxhits=25&amp;format=terse&amp;showsort=score&amp;ST=QS&amp;LNG=ALL</text>
<p>
<b>Result: </b><text decode='decode' url='url'>http:%2f%2fwww.dejanews.com%2f[ST_chan%3dart]%2fdnquery.xp%3fQRY%3dFaulkner%26VW%3darts.hum.lit.authors.d_e_f%26noreg%3d1%26maxhits%3d25%26format%3dterse%26showsort%3dscore%26ST%3dQS%26LNG%3dALL</text>
</p><p>
<b>Input: </b><text encode='encode' url='url'>http%3A%2F%2Fone%3Btwo%3Fthree%3Afour%40five%26amp%3Bsix%3Dseven%2Beight </text>;
</p><p>
<b>Result: </b><text decode='decode' url='url'>http%3A%2F%2Fone%3Btwo%3Fthree%3Afour%40five%26amp%3Bsix%3Dseven%2Beight </text>
<hr />

</p><h3><a name='b64enc'>base64 Encode Text and Special Symbols</a></h3>

<b>Description: </b> use base64 encoding for text and special symbols: "/:;?@&amp;=+".
<p>
<b>Input: </b>&lt;text encode base64&gt;http://one;two?three:four@five&amp;six=seven+eight&lt;/text&gt;
</p><p>
<b>Result: </b><text encode='encode' base64='base64'>http://one;two?three:four@five&amp;six=seven+eight</text>
</p><p>
<hr />

</p><h3><a name='b64dec'>Decode base64 Text and Special Symbols</a></h3>

<b>Description: </b>decode base64 encoded text which includes the special symbols: "/:;?@&amp;=+".
<p>
<b>Input: </b>&lt;text decode base64&gt;aHR0cDovL29uZTt0d28/dGhyZWU6Zm91ckBmaXZlJnNpeD1zZXZlbitlaWdodA==&lt;/text&gt;
</p><p>
<b>Result: </b><text decode='decode' base64='base64'>aHR0cDovL29uZTt0d28/dGhyZWU6Zm91ckBmaXZlJnNpeD1zZXZlbitlaWdodA==</text>
</p><p>
<hr />

</p><h3><a name='entenc'>Entity Encode</a></h3>
<b>Description: </b>Use entity encoding to preserve an "&amp;" as text in an XML document.
<p>
<b>Input: </b>&lt;text encode entity&gt;&amp; Co.&lt;/text&gt;
</p><p>
<b>Result: </b><text encode='encode' entity='entity'>&amp; Co.</text>
</p><p>
<hr />

</p><h3><a name='decent'>Entity Decode</a></h3>
<b>Description: </b>Use entity decoding to decode an "&amp;" that has been preserved as text in an XML document.
<p>
<b>Input: </b>&lt;text decode entity&gt;&amp; Co. &lt;/text&gt;
</p><p>
<b>Result: </b><text decode='decode' entity='entity'>&amp; Co.</text>
</p><p>
<footer cvsid='$Id: demo_text.xh,v 1.5 1999-03-29 18:21:46 pgage Exp $'></footer>

</p></body></html>

